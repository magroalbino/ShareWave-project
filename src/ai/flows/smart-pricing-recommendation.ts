// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Recommends optimal pricing for shared bandwidth based on location, demand, and availability.
 *
 * - getSmartPricingRecommendation - A function that returns a recommended price for bandwidth.
 * - SmartPricingRecommendationInput - The input type for the getSmartPricingRecommendation function.
 * - SmartPricingRecommendationOutput - The return type for the getSmartPricingRecommendation function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SmartPricingRecommendationInputSchema = z.object({
  location: z
    .string()
    .describe('The geographical location where bandwidth is being shared.'),
  demand: z
    .string()
    .describe('The current demand for bandwidth in the specified location (e.g., low, medium, high).'),
  availability: z
    .string()
    .describe('The amount of bandwidth available for sharing (e.g., low, medium, high).'),
  currentPrice: z.number().describe('The current price per GB being offered.'),
});
export type SmartPricingRecommendationInput =
  z.infer<typeof SmartPricingRecommendationInputSchema>;

const SmartPricingRecommendationOutputSchema = z.object({
  recommendedPrice: z
    .number()
    .describe('The recommended price per GB for the shared bandwidth.'),
  reasoning: z
    .string()
    .describe('The reasoning behind the recommended price adjustment.'),
});
export type SmartPricingRecommendationOutput =
  z.infer<typeof SmartPricingRecommendationOutputSchema>;

export async function getSmartPricingRecommendation(
  input: SmartPricingRecommendationInput
): Promise<SmartPricingRecommendationOutput> {
  return smartPricingRecommendationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'smartPricingRecommendationPrompt',
  input: {schema: SmartPricingRecommendationInputSchema},
  output: {schema: SmartPricingRecommendationOutputSchema},
  prompt: `You are an AI assistant designed to recommend the optimal price for shared bandwidth based on several factors.

You will receive the location, demand, availability, and current price of bandwidth.
Based on these factors, recommend a price per GB for the shared bandwidth. Provide a brief explanation for your recommendation.

Location: {{{location}}}
Demand: {{{demand}}}
Availability: {{{availability}}}
Current Price: {{{currentPrice}}}

Consider these factors when formulating the recommendation:
- High demand and low availability justify a higher price.
- Low demand and high availability suggest a lower price.
- Location-specific factors that may affect bandwidth value.
`,
});

const smartPricingRecommendationFlow = ai.defineFlow(
  {
    name: 'smartPricingRecommendationFlow',
    inputSchema: SmartPricingRecommendationInputSchema,
    outputSchema: SmartPricingRecommendationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
